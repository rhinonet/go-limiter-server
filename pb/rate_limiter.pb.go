// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/rate_limiter.proto

package limiter

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Permits              int32    `protobuf:"varint,2,opt,name=permits,proto3" json:"permits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{0}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *CreateRequest) GetPermits() int32 {
	if m != nil {
		return m.Permits
	}
	return 0
}

type CreateReply struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReply) Reset()         { *m = CreateReply{} }
func (m *CreateReply) String() string { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()    {}
func (*CreateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{1}
}

func (m *CreateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReply.Unmarshal(m, b)
}
func (m *CreateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReply.Marshal(b, m, deterministic)
}
func (m *CreateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReply.Merge(m, src)
}
func (m *CreateReply) XXX_Size() int {
	return xxx_messageInfo_CreateReply.Size(m)
}
func (m *CreateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReply proto.InternalMessageInfo

func (m *CreateReply) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

type GetRateRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRateRequest) Reset()         { *m = GetRateRequest{} }
func (m *GetRateRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateRequest) ProtoMessage()    {}
func (*GetRateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{2}
}

func (m *GetRateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateRequest.Unmarshal(m, b)
}
func (m *GetRateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateRequest.Marshal(b, m, deterministic)
}
func (m *GetRateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateRequest.Merge(m, src)
}
func (m *GetRateRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateRequest.Size(m)
}
func (m *GetRateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateRequest proto.InternalMessageInfo

func (m *GetRateRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type GetRateReply struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Permits              int32    `protobuf:"varint,2,opt,name=permits,proto3" json:"permits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRateReply) Reset()         { *m = GetRateReply{} }
func (m *GetRateReply) String() string { return proto.CompactTextString(m) }
func (*GetRateReply) ProtoMessage()    {}
func (*GetRateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{3}
}

func (m *GetRateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateReply.Unmarshal(m, b)
}
func (m *GetRateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateReply.Marshal(b, m, deterministic)
}
func (m *GetRateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateReply.Merge(m, src)
}
func (m *GetRateReply) XXX_Size() int {
	return xxx_messageInfo_GetRateReply.Size(m)
}
func (m *GetRateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateReply proto.InternalMessageInfo

func (m *GetRateReply) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func (m *GetRateReply) GetPermits() int32 {
	if m != nil {
		return m.Permits
	}
	return 0
}

type AcquireRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	Timeout              int32    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireRequest) Reset()         { *m = AcquireRequest{} }
func (m *AcquireRequest) String() string { return proto.CompactTextString(m) }
func (*AcquireRequest) ProtoMessage()    {}
func (*AcquireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{4}
}

func (m *AcquireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireRequest.Unmarshal(m, b)
}
func (m *AcquireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireRequest.Marshal(b, m, deterministic)
}
func (m *AcquireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireRequest.Merge(m, src)
}
func (m *AcquireRequest) XXX_Size() int {
	return xxx_messageInfo_AcquireRequest.Size(m)
}
func (m *AcquireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireRequest proto.InternalMessageInfo

func (m *AcquireRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *AcquireRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type AcquireReply struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcquireReply) Reset()         { *m = AcquireReply{} }
func (m *AcquireReply) String() string { return proto.CompactTextString(m) }
func (*AcquireReply) ProtoMessage()    {}
func (*AcquireReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{5}
}

func (m *AcquireReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcquireReply.Unmarshal(m, b)
}
func (m *AcquireReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcquireReply.Marshal(b, m, deterministic)
}
func (m *AcquireReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcquireReply.Merge(m, src)
}
func (m *AcquireReply) XXX_Size() int {
	return xxx_messageInfo_AcquireReply.Size(m)
}
func (m *AcquireReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AcquireReply.DiscardUnknown(m)
}

var xxx_messageInfo_AcquireReply proto.InternalMessageInfo

func (m *AcquireReply) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

type TryAcquireRequest struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TryAcquireRequest) Reset()         { *m = TryAcquireRequest{} }
func (m *TryAcquireRequest) String() string { return proto.CompactTextString(m) }
func (*TryAcquireRequest) ProtoMessage()    {}
func (*TryAcquireRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{6}
}

func (m *TryAcquireRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TryAcquireRequest.Unmarshal(m, b)
}
func (m *TryAcquireRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TryAcquireRequest.Marshal(b, m, deterministic)
}
func (m *TryAcquireRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TryAcquireRequest.Merge(m, src)
}
func (m *TryAcquireRequest) XXX_Size() int {
	return xxx_messageInfo_TryAcquireRequest.Size(m)
}
func (m *TryAcquireRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TryAcquireRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TryAcquireRequest proto.InternalMessageInfo

func (m *TryAcquireRequest) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

type TryAcquireReply struct {
	Ret                  bool     `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TryAcquireReply) Reset()         { *m = TryAcquireReply{} }
func (m *TryAcquireReply) String() string { return proto.CompactTextString(m) }
func (*TryAcquireReply) ProtoMessage()    {}
func (*TryAcquireReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_d574d459cacd346b, []int{7}
}

func (m *TryAcquireReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TryAcquireReply.Unmarshal(m, b)
}
func (m *TryAcquireReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TryAcquireReply.Marshal(b, m, deterministic)
}
func (m *TryAcquireReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TryAcquireReply.Merge(m, src)
}
func (m *TryAcquireReply) XXX_Size() int {
	return xxx_messageInfo_TryAcquireReply.Size(m)
}
func (m *TryAcquireReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TryAcquireReply.DiscardUnknown(m)
}

var xxx_messageInfo_TryAcquireReply proto.InternalMessageInfo

func (m *TryAcquireReply) GetRet() bool {
	if m != nil {
		return m.Ret
	}
	return false
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "limiter.CreateRequest")
	proto.RegisterType((*CreateReply)(nil), "limiter.CreateReply")
	proto.RegisterType((*GetRateRequest)(nil), "limiter.GetRateRequest")
	proto.RegisterType((*GetRateReply)(nil), "limiter.GetRateReply")
	proto.RegisterType((*AcquireRequest)(nil), "limiter.AcquireRequest")
	proto.RegisterType((*AcquireReply)(nil), "limiter.AcquireReply")
	proto.RegisterType((*TryAcquireRequest)(nil), "limiter.TryAcquireRequest")
	proto.RegisterType((*TryAcquireReply)(nil), "limiter.TryAcquireReply")
}

func init() { proto.RegisterFile("pb/rate_limiter.proto", fileDescriptor_d574d459cacd346b) }

var fileDescriptor_d574d459cacd346b = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x48, 0xd2, 0x2f,
	0x4a, 0x2c, 0x49, 0x8d, 0xcf, 0xc9, 0xcc, 0xcd, 0x2c, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0xec, 0xb9, 0x78, 0x9d, 0x8b, 0x52, 0x81, 0x0a, 0x82, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x13, 0x73, 0x32, 0x13, 0x8b, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21, 0x09, 0x2e, 0xf6, 0x82, 0xd4, 0x22, 0xa0, 0x96,
	0x62, 0x09, 0x26, 0xa0, 0x38, 0x6b, 0x10, 0x8c, 0xab, 0x24, 0xcf, 0xc5, 0x0d, 0x33, 0xa0, 0x20,
	0xa7, 0x52, 0x48, 0x80, 0x8b, 0xb9, 0x28, 0xb5, 0x04, 0xac, 0x99, 0x23, 0x08, 0xc4, 0x54, 0x52,
	0xe3, 0xe2, 0x73, 0x4f, 0x2d, 0x09, 0x22, 0x64, 0x85, 0x92, 0x15, 0x17, 0x0f, 0x5c, 0x1d, 0x56,
	0x93, 0xf0, 0x38, 0xc2, 0x81, 0x8b, 0xcf, 0x31, 0xb9, 0xb0, 0x34, 0xb3, 0x88, 0xb0, 0x37, 0x4a,
	0x32, 0x73, 0x53, 0xf3, 0x4b, 0x4b, 0x60, 0x26, 0x40, 0xb9, 0x4a, 0x0a, 0x5c, 0x3c, 0x70, 0x13,
	0xb0, 0xfb, 0x43, 0x93, 0x4b, 0x30, 0xa4, 0xa8, 0x92, 0x18, 0x6b, 0x94, 0x94, 0xb9, 0xf8, 0x91,
	0x95, 0x62, 0x35, 0xcf, 0xa8, 0x9d, 0x89, 0x8b, 0x1b, 0xe4, 0x5b, 0x1f, 0x48, 0x4c, 0x08, 0x59,
	0x70, 0xb1, 0x41, 0x02, 0x52, 0x48, 0x4c, 0x0f, 0x16, 0x59, 0x28, 0x51, 0x23, 0x25, 0x82, 0x21,
	0x0e, 0x34, 0x59, 0x89, 0x41, 0xc8, 0x9a, 0x8b, 0x1d, 0x1a, 0x72, 0x42, 0xe2, 0x70, 0x25, 0xa8,
	0x61, 0x2e, 0x25, 0x8a, 0x29, 0x01, 0xd7, 0x0c, 0x75, 0x28, 0x92, 0x66, 0x54, 0x5f, 0x22, 0x69,
	0x46, 0xf6, 0x13, 0x50, 0xb3, 0x0b, 0x17, 0x17, 0xc2, 0xa3, 0x42, 0x52, 0x70, 0x65, 0x18, 0x01,
	0x25, 0x25, 0x81, 0x55, 0x0e, 0x6c, 0x4a, 0x12, 0x1b, 0x38, 0x4d, 0x1a, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xad, 0xfc, 0x9b, 0x4e, 0xac, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RateLimiterClient is the client API for RateLimiter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RateLimiterClient interface {
	//create a limiter
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	//get limiter permits
	GetRate(ctx context.Context, in *GetRateRequest, opts ...grpc.CallOption) (*GetRateReply, error)
	//acquire a token block in timeout
	Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireReply, error)
	//acquire a token at once
	TryAcquire(ctx context.Context, in *TryAcquireRequest, opts ...grpc.CallOption) (*TryAcquireReply, error)
}

type rateLimiterClient struct {
	cc *grpc.ClientConn
}

func NewRateLimiterClient(cc *grpc.ClientConn) RateLimiterClient {
	return &rateLimiterClient{cc}
}

func (c *rateLimiterClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/limiter.RateLimiter/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterClient) GetRate(ctx context.Context, in *GetRateRequest, opts ...grpc.CallOption) (*GetRateReply, error) {
	out := new(GetRateReply)
	err := c.cc.Invoke(ctx, "/limiter.RateLimiter/GetRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterClient) Acquire(ctx context.Context, in *AcquireRequest, opts ...grpc.CallOption) (*AcquireReply, error) {
	out := new(AcquireReply)
	err := c.cc.Invoke(ctx, "/limiter.RateLimiter/Acquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rateLimiterClient) TryAcquire(ctx context.Context, in *TryAcquireRequest, opts ...grpc.CallOption) (*TryAcquireReply, error) {
	out := new(TryAcquireReply)
	err := c.cc.Invoke(ctx, "/limiter.RateLimiter/TryAcquire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RateLimiterServer is the server API for RateLimiter service.
type RateLimiterServer interface {
	//create a limiter
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	//get limiter permits
	GetRate(context.Context, *GetRateRequest) (*GetRateReply, error)
	//acquire a token block in timeout
	Acquire(context.Context, *AcquireRequest) (*AcquireReply, error)
	//acquire a token at once
	TryAcquire(context.Context, *TryAcquireRequest) (*TryAcquireReply, error)
}

// UnimplementedRateLimiterServer can be embedded to have forward compatible implementations.
type UnimplementedRateLimiterServer struct {
}

func (*UnimplementedRateLimiterServer) Create(ctx context.Context, req *CreateRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRateLimiterServer) GetRate(ctx context.Context, req *GetRateRequest) (*GetRateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRate not implemented")
}
func (*UnimplementedRateLimiterServer) Acquire(ctx context.Context, req *AcquireRequest) (*AcquireReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Acquire not implemented")
}
func (*UnimplementedRateLimiterServer) TryAcquire(ctx context.Context, req *TryAcquireRequest) (*TryAcquireReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryAcquire not implemented")
}

func RegisterRateLimiterServer(s *grpc.Server, srv RateLimiterServer) {
	s.RegisterService(&_RateLimiter_serviceDesc, srv)
}

func _RateLimiter_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/limiter.RateLimiter/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiter_GetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServer).GetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/limiter.RateLimiter/GetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServer).GetRate(ctx, req.(*GetRateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiter_Acquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServer).Acquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/limiter.RateLimiter/Acquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServer).Acquire(ctx, req.(*AcquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RateLimiter_TryAcquire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TryAcquireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RateLimiterServer).TryAcquire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/limiter.RateLimiter/TryAcquire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RateLimiterServer).TryAcquire(ctx, req.(*TryAcquireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RateLimiter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "limiter.RateLimiter",
	HandlerType: (*RateLimiterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RateLimiter_Create_Handler,
		},
		{
			MethodName: "GetRate",
			Handler:    _RateLimiter_GetRate_Handler,
		},
		{
			MethodName: "Acquire",
			Handler:    _RateLimiter_Acquire_Handler,
		},
		{
			MethodName: "TryAcquire",
			Handler:    _RateLimiter_TryAcquire_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/rate_limiter.proto",
}
